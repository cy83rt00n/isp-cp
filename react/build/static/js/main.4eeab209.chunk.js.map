{"version":3,"sources":["IspCpConfig.js","models/User.js","componets/LoginForm.js","IspCpHelper.js","componets/ChainedList.js","componets/IssueForm.js","models/Address.js","models/Engineer.js","componets/Issues.js","models/Term.js","componets/TermsListItem.js","componets/Terms.js","componets/Options.js","componets/DefaultPanel.js","componets/IspPanel.js","serviceWorker.js","index.js"],"names":["props","ApiProtocol","ApiHost","ApiPort","ApiUrlPrefix","LoggedIn","axios","get","this","ApiRequest","then","response","setLoggedIn","data","value","path","indexOf","User","id","email","pass","useStyles","makeStyles","card","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","cardContainer","marginTop","LoginForm","classes","Container","className","maxWidth","Card","component","onSubmit","CardContent","Box","TextField","type","name","placeholder","defaultValue","CardActions","Button","IspCpHelper","callApi","url","params","callback","config","defaults","IspCpConfig","window","location","search","substr","split","console","log","pairs","forEach","param","push","ChainedList","onChange","children","NativeSelect","key","root_title","map","child","formStyles","theme","modal","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","IssueForm","React","useState","open","setOpen","city","street","home","flat","address","setAddress","cities","setCities","streets","setStreets","homes","setHomes","flats","setFlats","engineers","setEngineers","engineer","setEngineer","afterReport","handleClose","onChangeAddress","event","address_new","Object","assign","target","selectedOptions","item","text","term","length","slugify","terms","onClick","color","variant","Modal","aria-labelledby","aria-describedby","closeAfterTransition","onClose","preventDefault","issue","comment","comment_new","password","label","Address","Engineer","he","require","Issues","updateTimeout","modalFormOpen","passState","index","JSON","parse","a","decoded","decode","parsed","e","setState","success","state","ispcpHelper","bind","handleSubmit","componentDidMount","callUpdate","currentTarget","Target","dataset","update","document","querySelector","updateIssue","resolve","resolveIssue","report","stringify","apiPath","pathname","startsWith","Paper","Table","TableHead","TableRow","TableCell","TableBody","Date","parseInt","report_date","toLocaleDateString","resolve_date","ButtonGroup","size","data-update","data-resolve","Component","Term","slug","parentId","TermsListItem","EmptyTerm","handleDeleteTerm","HierTerm","itemClass","ListItem","button","ListItemAvatar","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","data-delete","ParentTerm","hierStyles","root","width","nested","paddingLeft","Collapse","in","timeout","unmountOnExit","List","disablePadding","Terms","create","onParentSelect","setInitialState","styles","eventTarget","parent","result","delete","createTerm","deleteTerm","slice","textContent","concat","catch","reason","prevProps","TermsForm","termsFormStyles","flexGrow","height","control","Grid","container","justify","FormControl","InputLabel","shrink","htmlFor","inputProps","TermsOptionsList","data-create","Input","data-slug","Options","undefined","error","role","access","toString","menuButton","marginRight","DefaultPanel","username","anchorEl","setAnchorEl","AppBar","position","Toolbar","IconButton","aria-controls","aria-hidden","aria-haspopup","edge","aria-label","Typography","Menu","keepMounted","Boolean","MenuItem","Link","to","IspPanel","user","handleSubmitLoginForm","form","exception","sessionStorage","clear","href","origin","getItem","setItem","toUpperCase","IspPanelAppBar","hostname","match","createMuiTheme","overrides","MuiButton","cursor","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4eeab209.chunk.js","sourcesContent":["\nimport axios from \"axios\";\n\nclass IspCpConfig {\n    ApiProtocol = \"http\";\n    ApiHost = \"ispcp.onedext.ru\";\n    ApiPort = 8080;\n    ApiUrlPrefix = \"/api\";\n    LoggedIn = false;\n\n    constructor(props) {\n        axios.get(this.ApiRequest(\"/users/login\")).then(\n            (response) => {\n                this.setLoggedIn(response.data);\n            });\n    }\n\n    setLoggedIn(value)\n    {\n        this.LoggedIn = value;\n    }\n\n    ApiRequest(path) {\n        return this.ApiProtocol + \"://\" +\n            this.ApiHost +\n            (this.ApiPort ? \":\" + this.ApiPort : '') +\n            this.ApiUrlPrefix +\n            path;\n    }\n\n    ApiRootRequest(path) {\n        if (path.indexOf(\"?\") === -1) {\n            return this.ApiRequest(path + \"?role=99999999999&passwd=secret\")\n        } else {\n            return this.ApiRequest(path + \"&role=99999999999&passwd=secret\")\n        }\n    }\n}\n\nexport default new IspCpConfig();","export default class User {\n    id = 0;\n    email = \"\";\n    pass = \"\";\n    role;\n}","import Container from \"@material-ui/core/Container\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\n\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    cardContainer: {\n        marginTop: \"1.5em\",\n    }\n});\n\nexport default function LoginForm(props) {\n\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.cardContainer} maxWidth={\"sm\"}>\n            <Card className={classes.card} maxWidth={\"md\"} component={\"form\"} onSubmit={props.onSubmit}>\n                <CardContent>\n                    <Box component={\"div\"}>\n                        <TextField type={\"email\"} name={\"email\"} placeholder={\"Login\"} defaultValue={props.email}/>\n                    </Box>\n                    <Box component={\"div\"}>\n                        <TextField type={\"password\"} name={\"pass\"} placeholder={\"Password\"} defaultValue={props.pass}>\n                            Password\n                        </TextField>\n                    </Box>\n\n\n                </CardContent>\n                <CardActions>\n                    <Button type={\"submit\"}>SGIN IN</Button>\n                </CardActions>\n            </Card>\n        </Container>\n    )\n}","import axios from \"axios\";\nimport IspCpConfig from \"./IspCpConfig\";\n\nexport default class IspCpHelper {\n    getUriParams() {\n        let params = window.location.search.substr(1).split(\"&\");\n        console.log(params);\n        let pairs = [];\n        params.forEach((param) => {\n            pairs.push(param.split(\"=\"));\n        });\n        return pairs;\n    }\n\n    callApi = (url,params, callback) => {\n        let config = params || {params:axios.defaults.params};\n        axios.get(IspCpConfig.ApiRequest(url), config)\n            .then(\n                response =>  { callback(response) }\n            )\n    }\n}","import Box from \"@material-ui/core/Box\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport React from \"react\";\n\nexport default function ChainedList(props) {\n    const onChange = props.onChange;\n    const children = props.children;\n\n    return (\n        <Box component={\"div\"}>\n            <NativeSelect name={props.id} onChange={onChange} id={props.id} value={props.value}>\n                <option key={\"address-root-item-\" + props.id} value={0}>{props.root_title}</option>\n                {children.map(child => {\n                    return (<option key={\"address-item-\" + child.id} value={child.id}>{child.title}</option>);\n                })}\n            </NativeSelect>\n        </Box>\n    );\n}","import React from \"react\";\nimport IspCpConfig from \"../IspCpConfig\";\nimport axios from \"axios\";\nimport {slugify} from \"transliteration\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {makeStyles, NativeSelect} from \"@material-ui/core\";\nimport IspCpHelper from \"../IspCpHelper\";\nimport ChainedList from \"./ChainedList\";\n\nconst formStyles = makeStyles(theme => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport default function IssueForm(props) {\n\n    const classes = formStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const [address, setAddress] = React.useState({city: {}, street: {}, home: {}, flat: {}});\n    const [cities, setCities] = React.useState([]);\n    const [streets, setStreets] = React.useState([]);\n    const [homes, setHomes] = React.useState([]);\n    const [flats, setFlats] = React.useState([]);\n    const [engineers, setEngineers] = React.useState([])\n    const [engineer, setEngineer] = React.useState({id:0,title:''});\n\n    const afterReport = props.afterReport;\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n\n    const reportIssue = (event) => {\n        event.preventDefault();\n\n        let issue = Object.assign({address: address}, {engineer: engineer}, {comment: event.target.comment_new.value});\n        let url = \"/issues/report/\";\n        new IspCpHelper().callApi(url,{\n            params: {\n                email: axios.defaults.params.email,\n                password: axios.defaults.params.password,\n                comment: issue\n            }\n        }, ()=>{handleClose();afterReport();});\n    }\n\n    const onChangeAddress = (event) => {\n        var address_new = Object.assign({}, address);\n\n        switch (event.target.id) {\n            case \"city-new\":\n                address_new.city = {\n                    title: event.target.selectedOptions.item(0).text,\n                    id: event.target.value\n                };\n                address_new.city.title = event.target.selectedOptions.item(0).text;\n                new IspCpHelper().callApi(\"/term/\" + address_new.city.id,null, (response) => {\n                    setStreets(response.data.term.children || [])\n                });\n                break;\n            case \"street-new\":\n                address_new.street = {\n                    title: event.target.selectedOptions.item(0).text,\n                    id: event.target.value\n                };\n                new IspCpHelper().callApi(\"/term/\" + address_new.street.id,null, (response) => {\n                    setHomes(response.data.term.children || [])\n                });\n                break;\n            case \"home-new\":\n                address_new.home = {\n                    title: event.target.selectedOptions.item(0).text,\n                    id: event.target.value\n                };\n                new IspCpHelper().callApi(\"/term/\" + address_new.home.id,null, (response) => {\n                    setFlats(response.data.term.children || [])\n                });\n                break;\n            case \"flat-new\":\n                address_new.flat = {\n                    title: event.target.selectedOptions.item(0).text,\n                    id: event.target.value\n                };\n                break;\n        }\n        setAddress(address_new);\n    }\n\n    const onChangeEngineer = (event) => {\n        setEngineer({\n            title: event.target.selectedOptions.item(0).text,\n            id: event.target.value\n        })\n    }\n\n    if (cities.length === 0) {\n        new IspCpHelper().callApi(\"/terms/\" + slugify(\"Адреса\"),null, (response) => {\n            setCities(response.data.terms)\n        });\n    }\n\n    if (engineers.length === 0) {\n        new IspCpHelper().callApi(\"/terms/\" + slugify(\"Монтажники\"),null, (response) => {\n            setEngineers(response.data.terms)\n        });\n    }\n\n    return (\n        <div>\n            <Button onClick={handleOpen} color=\"secondary\" variant={\"outlined\"}>REPORT</Button>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                open={open}\n                closeAfterTransition\n                onClose={handleClose}\n                className={classes.modal}\n            >\n\n                <Box component={\"form\"} className={classes.paper} onSubmit={reportIssue}>\n                    <h2 id=\"transition-modal-title\">REPORT ISSUE</h2>\n                    <Box component={\"div\"}>\n                        <ChainedList root_title=\"Город\" value={address.city.id} children={cities}\n                                     onChange={onChangeAddress} id={\"city-new\"}/>\n                        <ChainedList root_title=\"Улица\" value={address.street.id} children={streets}\n                                     onChange={onChangeAddress} id={\"street-new\"}/>\n                        <ChainedList root_title=\"Дом\" value={address.home.id} children={homes} onChange={onChangeAddress}\n                                     id={\"home-new\"}/>\n                        <ChainedList root_title=\"Квартира\" value={address.flat.id} children={flats}\n                                     onChange={onChangeAddress} id={\"flat-new\"}/>\n                    </Box>\n                    <Box component={\"div\"}>\n                        <NativeSelect value={engineer.id} onChange={onChangeEngineer}>\n                            <option value={0}>Монтажник</option>\n                            {\n                                engineers.map(item => {\n                                    return(<option key={\"engineer-id-\" + item.id} value={item.id}>{item.title}</option>)\n                                })\n                            }\n                        </NativeSelect>\n                    </Box>\n                    <Box component={\"div\"}>\n                        <TextField\n                            label=\"Комментарий\"\n                            id={\"transition-modal-description\"}\n                            defaultValue={\"\"}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            name={\"comment_new\"}\n                        />\n                        <Button type=\"submit\" color=\"secondary\" variant={\"outlined\"}>REPORT</Button>\n                    </Box>\n                </Box>\n            </Modal>\n        </div>\n    );\n\n};","let Address = {\n    city : {\n        id:0, title:''\n    },\n    street: {\n        id:0, title:''\n    },\n    home: {\n        id:0, title:''\n    },\n    flat: {\n        id:0, title:''\n    }\n}\n\nexport default Address;","let Engineer = {\n    id:0, title:''\n}\n\nexport default Engineer;","import React from 'react';\nimport axios from 'axios';\nimport IspCpConfig from \"../IspCpConfig\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport TextField from '@material-ui/core/TextField';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport {slugify} from 'transliteration';\nimport Modal from '@material-ui/core/Modal';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Box from \"@material-ui/core/Box\";\nimport {ListItemText} from \"@material-ui/core\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport {serialize} from \"react-serialize\";\nimport IspCpHelper from \"../IspCpHelper\";\nimport IssueForm from \"./IssueForm\";\nimport Address from \"../models/Address\";\nimport Engineer from \"../models/Engineer\";\n\nvar he = require('he');\n\nvar issusesInstance;\n\nexport default class Issues extends React.Component {\n    updateTimeout = 10000;\n    modalFormOpen = true;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            success: false,\n            data: []\n        };\n        this.ispcpHelper = new IspCpHelper();\n        this.passState = this.passState.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.callUpdate = this.callUpdate.bind(this);\n        issusesInstance = this;\n    }\n\n    callUpdate() {\n        this.componentDidMount();\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(event.currentTarget);\n        window.Target = event.currentTarget;\n\n        if (event.currentTarget.dataset.update) {\n            // var issueForm = document.querySelector(\"form#issue-edit-\" + event.currentTarget.dataset.update);\n            console.log(\"Udate \" + event.currentTarget.dataset.update);\n            // window.issueForm = issueForm;\n            const comment = document.querySelector(\"#comment-\" + event.currentTarget.dataset.update).value;\n            this.updateIssue(event.currentTarget.dataset.update, comment);\n        }\n        if (event.currentTarget.dataset.resolve) {\n            // var issueForm = document.querySelector(\"form#issue-edit-\" + event.currentTarget.dataset.resolve);\n            console.log(\"Resolve \" + event.currentTarget.dataset.resolve);\n            this.resolveIssue(event.currentTarget.dataset.resolve);\n        }\n    }\n\n    resolveIssue(id) {\n        new IspCpHelper().callApi(\"/issues/resolve/\" + id, null, this.componentDidMount);\n    }\n\n    updateIssue(id, comment) {\n        let report = {\n            address: Address,\n            engineer: Engineer,\n            comment: comment\n        };\n        new IspCpHelper().callApi(\"/issues/update/\" + id + \"?comment=\" + JSON.stringify(report), null, this.componentDidMount);\n    }\n\n\n    componentDidMount() {\n        let apiPath = \"/issues/\";\n        let location = this.props.location.pathname;\n        if (location.startsWith(\"/issues/\") && location.length > \"/issues/\".length) {\n            apiPath = location;\n        }\n        new IspCpHelper().callApi(apiPath, null, this.passState);\n    }\n\n    passState = (response) => {\n        response.data.index = JSON.parse(response.data.index);\n        console.log(response.data.index);\n        response.data.index.map(async (issue) => {\n            const decoded = he.decode(issue.comment);\n            console.log(decoded)\n            issue.comment = {\n                address: Address,\n                engineer: Engineer,\n                comment: ''\n            };\n            try {\n                const parsed = JSON.parse(decoded);\n                if (typeof(parsed)===\"object\") {\n                    issue.comment = parsed\n                } else {\n                    issue.comment.comment = parsed\n                }\n            } catch (e) {\n                issue.comment.comment = JSON.parse(decoded);\n            }\n        })\n        console.log(response.data.index);\n        this.setState(() => {\n            return {\n                success: response.data.success,\n                data: response.data.index\n            }\n        });\n\n    };\n\n\n    render() {\n        if (this.state.success) {\n            const data = this.state.data;\n            // setTimeout(this.componentDidMount, this.updateTimeout);\n            return (\n                <Paper>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Issue</TableCell>\n                                <TableCell>Reported </TableCell>\n                                <TableCell>Resolved</TableCell>\n                                <TableCell>Address</TableCell>\n                                <TableCell>Engineer</TableCell>\n                                <TableCell>Comment</TableCell>\n                                <TableCell>\n                                    <IssueForm afterReport={this.callUpdate}/>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>{data.map(issue =>\n                            <TableRow key={\"issue-\" + issue.id}>\n                                <TableCell>{issue.id}</TableCell>\n                                <TableCell>{new Date(parseInt(issue.report_date) * 1000).toLocaleDateString()}</TableCell>\n                                <TableCell>\n                                    {\n                                        (issue.resolve_date > 0)\n                                            ? new Date(parseInt(issue.resolve_date) * 1000).toLocaleDateString()\n                                            : ''\n                                    }\n                                </TableCell>\n                                <TableCell>\n                                    {issue.comment.address.city.title} /\n                                    {issue.comment.address.street.title} /\n                                    {issue.comment.address.home.title} /\n                                    {issue.comment.address.flat.title}\n                                </TableCell>\n                                <TableCell>\n                                    {issue.comment.engineer.title}\n                                </TableCell>\n                                <TableCell>\n                                    <TextField\n                                        label=\"Комментарий\"\n                                        id={\"comment-\" + issue.id}\n                                        defaultValue={issue.comment.comment}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                    /></TableCell>\n                                <TableCell>\n                                    <ButtonGroup size=\"small\">\n                                        <Button type=\"button\" onClick={this.handleSubmit} data-update={issue.id}\n                                                color=\"primary\">\n                                            UPDATE\n                                        </Button>\n                                        <Button type=\"button\" onClick={this.handleSubmit} data-resolve={issue.id}\n                                                color=\"secondary\">\n                                            RESOLVE\n                                        </Button>\n                                    </ButtonGroup>\n                                </TableCell>\n                            </TableRow>\n                        )}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            );\n        }\n        return ('');\n    }\n}\n\n\n\n","export default class Term {\n\n    constructor(props) {\n        this.id = props.id || 0;\n        this.slug = props.slug || \"root\";\n        this.title = props.title || \"Корень\";\n        this.parentId = props.parentId || 0;\n        this.children = props.children || [];\n    }\n}","import React from 'react';\nimport {makeStyles} from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport FolderIcon from '@material-ui/icons/Folder';\nimport Collapse from \"@material-ui/core/Collapse\";\nimport LabelIcon from '@material-ui/icons/Label';\n\nexport default function TermsListItem(props) {\n    console.log(\"I'm TermsListItem : \");\n    console.log(props);\n    const item = (props.term.children.length === 0) ?\n        <EmptyTerm key={\"term-\" + props.term.id} title={props.term.title} handleDeleteTerm={props.handleDeleteTerm} id={props.term.id}/> :\n        <HierTerm key={\"term-\" + props.term.id} term={props.term} handleDeleteTerm={props.handleDeleteTerm} id={props.term.id}/>;\n    return (item);\n}\n\n/**\n *\n * @param props\n * @constructor\n */\nfunction EmptyTerm(props) {\n    const itemClass = props.className || \"\";\n    return (\n        <ListItem key={\"term-\" + props.id} button className={itemClass}>\n            <ListItemAvatar>\n                <ListItemIcon>\n                    <LabelIcon/>\n                </ListItemIcon>\n            </ListItemAvatar>\n            <ListItemText primary={props.title}/>\n            <ListItemSecondaryAction>\n                <Button type=\"button\" onClick={props.handleDeleteTerm} data-delete={props.id} color=\"primary\"\n                        variant={\"outlined\"}>\n                    DELETE\n                </Button>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}\n\n/**\n *\n * @param props\n * @constructor\n */\nfunction ParentTerm(props) {\n    const itemClass = props.className || \"\";\n    return (\n        <ListItem key={\"term-\" + props.id} button className={itemClass} onClick={props.onClick}>\n            <ListItemAvatar>\n                <ListItemIcon>\n                    <FolderIcon/>\n                </ListItemIcon>\n            </ListItemAvatar>\n            <ListItemText primary={props.title}/>\n            <ListItemSecondaryAction>\n                <Button type=\"button\" onClick={props.handleDeleteTerm} data-delete={props.id} color=\"primary\"\n                        variant={\"outlined\"}>\n                    DELETE\n                </Button>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}\n\nconst hierStyles = makeStyles(theme => ({\n    root  : {\n        width          : '100%',\n        maxWidth       : 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nfunction HierTerm(props) {\n    const classes = hierStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    return ([\n        <ParentTerm key={\"term-\" + props.term.id + \"-root\"} title={props.term.title} handleDeleteTerm={props.handleDeleteTerm} onClick={handleClick} id={props.term.id}/>,\n        <Collapse key={\"term-\" + props.term.id + \"-collapse\"} in={open} timeout=\"auto\" unmountOnExit>\n            <List key={\"term-\" + props.term.id + \"-neseted\"} component=\"div\" disablePadding className={classes.nested}>\n                {\n                    props.term.children.map(child => {\n                        return (\n                            <TermsListItem key={\"term-\" + child.id} term={child}\n                                           handleDeleteTerm={props.handleDeleteTerm} id={child.id}/>\n                        );\n                    })\n                }\n            </List>\n        </Collapse>\n    ]);\n}","import React from 'react';\nimport axios from 'axios';\nimport IspCpConfig from \"../IspCpConfig\";\nimport {slugify} from 'transliteration';\nimport {\n    Box,\n    Button,\n    FormControl,\n    Grid,\n    Input,\n    InputLabel,\n    List,\n    makeStyles,\n    NativeSelect,\n    TextField\n} from \"@material-ui/core\";\n\nimport Term from \"../models/Term\";\nimport TermsListItem from \"./TermsListItem\";\n\nvar he = require('he');\n\nexport default class Terms extends React.Component {\n\n    updateTimeout;\n\n    constructor(props) {\n        super(props);\n        console.log(\"I'm constructor\");\n        this.state = {\n            success: false,\n            terms: [],\n            create: new Term({})\n        };\n        console.log(\"My state is \" + JSON.stringify(this.state));\n        this.updateTimeout = 10000;\n        this.onSubmit = this.onSubmit.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.onParentSelect = this.onParentSelect.bind(this);\n        this.setInitialState = this.setInitialState.bind(this);\n        this.setInitialState();\n        this.styles = makeStyles(theme => ({\n            root: {\n                width: '100%',\n                maxWidth: 360,\n                backgroundColor: theme.palette.background.paper,\n            },\n            nested: {\n                paddingLeft: theme.spacing(4),\n            },\n        }));\n    }\n\n    createTerm(eventTarget) {\n        let url = IspCpConfig.ApiRequest(\"/terms/create/\");\n        axios.get(url, {\n            params: {\n                email: axios.defaults.params.email,\n                password: axios.defaults.params.password,\n                slug: eventTarget.slug.value,\n                title: eventTarget.title.value,\n                parent: eventTarget.parent.value\n            }\n        }).then(\n            result => {\n                this.setState({\n                    create: new Term({})\n                });\n                this.componentDidMount();\n            })\n    }\n\n    deleteTerm(id) {\n        let url = IspCpConfig.ApiRequest(\"/terms/delete/\");\n        axios.get(url, {\n            params: {\n                email: axios.defaults.params.email,\n                password: axios.defaults.params.password,\n                id: id\n            }\n        }).then(\n            result => {\n                this.componentDidMount();\n            })\n    }\n\n    onSubmit(event) {\n        console.log(event.currentTarget.dataset.delete);\n        event.preventDefault();\n        if (event.target.create) {\n            this.createTerm(event.target);\n        }\n        if (event.currentTarget.dataset.delete) {\n            this.deleteTerm(event.currentTarget.dataset.delete);\n        }\n    }\n\n    onParentSelect(event) {\n\n        console.log(event.target.value);\n        let slice = this.state.create;\n        slice.parentId = event.target.value;\n        slice.slug = slugify(event.target.selectedOptions.item(0).textContent);\n        const create = slice;\n        this.setState({\n            create: create\n        });\n    }\n\n\n    componentDidMount() {\n\n        console.log(\"I'm diMount\");\n        let apiPath = IspCpConfig.ApiRequest(\"/terms/\");\n        let location = this.props.location.pathname;\n        if (location.startsWith(\"/terms/\") && location.length > \"/terms/\".length) {\n            apiPath = IspCpConfig.ApiRequest(location);\n        }\n\n        axios.get(apiPath, {\n            params: {\n                email: axios.defaults.params.email,\n                password: axios.defaults.params.password\n            }\n        })\n            .then(\n                result => {\n                    console.log(\"Did mount api result : \" + JSON.stringify(result));\n                    this.setState({\n                        success: result.data.success,\n                        terms: result.data.terms,\n                        create: {children: [new Term({})].concat(result.data.terms)}\n                    });\n                }\n            )\n            .catch(reason => {\n                console.log(reason)\n            })\n    }\n\n    setInitialState() {\n    }\n\n    componentDidUpdate(prevProps) {\n        console.log(prevProps.location);\n        console.log(this.props.location);\n        if (this.props.location !== prevProps.location) {\n            this.componentDidMount();\n        }\n    }\n\n    render() {\n        console.log(\"I'm render\");\n        console.log(this.state);\n        // setTimeout(this.componentDidMount, this.updateTimeout);\n\n        const list = (state) => {\n            console.log(\"Im arow list func\");\n            console.log(state);\n            if (state.success === false) {\n                return ('');\n            } else {\n                return (\n                    <List component={\"div\"}>\n                        {state.terms.map(term => {\n                            return (\n                                <TermsListItem key={term.id} term={term}\n                                               handleDeleteTerm={this.onSubmit}></TermsListItem>\n                            )\n                        })}\n                    </List>\n                )\n            }\n        };\n\n        return (\n            <Box component={\"div\"}>\n                {list(this.state)}\n                <TermsForm\n                    term={this.state.create}\n                    onSubmit={this.onSubmit}\n                    onChange={this.onParentSelect}\n                />\n            </Box>\n        );\n    }\n}\n\nconst termsFormStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 140,\n        width: 100,\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n}));\n\nfunction TermsForm(props) {\n    const classes = termsFormStyles();\n    console.log(\"Form props : \" + JSON.stringify(props));\n\n    return (\n        <Box component={\"form\"} onSubmit={props.onSubmit} variant={\"outlined\"}>\n\n            <Grid container justify=\"flex-start\" spacing={4}>\n                <Grid key={0} item>\n                    <TextField\n                        label={\"Название\"}\n                        name={\"title\"}\n                        defaultValue={''}\n                        variant={\"standard\"}\n                    >\n                    </TextField>\n                </Grid>\n                <Grid key={1} item>\n                    <FormControl>\n                        <InputLabel shrink htmlFor=\"parent-id-select\">\n                            Родитель\n                        </InputLabel>\n                        <NativeSelect\n                            onChange={props.onChange}\n                            inputProps={{\n                                name: 'parent',\n                                id: 'parent-id-select',\n                            }}\n                            value={props.term.parentId}\n                        >\n                            <TermsOptionsList key={\"terms-options-list\" + props.term.id} term={props.term}/>\n                        </NativeSelect>\n                    </FormControl>\n                </Grid>\n                <Grid key={2} item>\n                    <Button data-create={0} type={\"submit\"} variant={\"outlined\"} color={\"primary\"}\n                            size={\"large\"}>SUBMIT</Button>\n                </Grid>\n            </Grid>\n\n            <Input type={\"hidden\"} name={\"create\"} value={0}/>\n            <Input type={\"hidden\"} name={\"slug\"} value={props.term.slug}/>\n\n\n        </Box>\n    );\n}\n\nfunction TermsOptionsList(props) {\n    console.log(props.term);\n    if (props.term.children.length === 0) {\n        return (\n            <option key={\"terms-option\" + props.term.id} value={props.term.id}\n                    data-slug={slugify(props.term.title)}>{props.term.title}</option>\n        );\n    } else {\n        console.log(\"ImOptionsList\");\n        console.log(props.term);\n        return ([\n            props.term.id && <option key={\"terms-option\" + props.term.id} value={props.term.id}>{props.term.title}</option>,\n\n            props.term.children.map(child =>\n                <TermsOptionsList key={\"terms-options-list\" + child.id} term={child}/>\n            )\n\n        ]);\n    }\n}\n\n\n\n","import React from \"react\";\nimport axios from \"axios\"\nimport IspCpConfig from \"../IspCpConfig\";\n\nexport default class Options extends React.Component {\n    state = {\n        success: false,\n        name: undefined,\n        value: undefined\n    }\n\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        axios.get(IspCpConfig.ApiRequest(\"/options/get/roles\"))\n            .then(\n                (result) => {\n                    console.log(this.state);\n                    this.setState(result.data);\n                    console.log(this.state);\n                }\n            )\n            .catch(\n                (error) => {\n                    console.log(error);\n                }\n            )\n    }\n\n    render() {\n        if (this.state.success) {\n            const {role} = JSON.parse(this.state.value.value);\n            return (\n                <div>\n                    <p>{role.id}.{role.name}[{role.access.toString()}]</p>\n                </div>\n            );\n        }\n        return '';\n    }\n\n}\n\n\n//{value.map(prop=>{<p>{prop}</p>})}\n","import React from \"react\";\nimport {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Issues from \"./Issues\";\nimport Terms from \"./Terms\";\nimport Options from \"./Options\";\nimport {AppBar, makeStyles} from \"@material-ui/core\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IspPanel from \"./IspPanel\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function DefaultPanel(props) {\n    const classes = useStyles();\n    const username = props.username || '';\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    return ([\n        <Router>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton aria-controls=\"menu-top\" aria-hidden=\"false\" aria-haspopup=\"false\" onClick={handleClick}\n                                edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {username}@ISP.CP\n                    </Typography>\n                    <Menu id={\"menu-top\"} anchorEl={anchorEl}\n                          keepMounted\n                          open={Boolean(anchorEl)}\n                          onClose={handleClose}>\n                        <MenuItem key={\"tm-1\"}><Button component={Link} to=\"/\" color={\"primary\"}\n                                                       variant={\"contained\"}>Home</Button></MenuItem>\n                        <MenuItem key={\"tm-2\"}><Button component={Link} to=\"/issues/\" color={\"primary\"}\n                                                       variant={\"contained\"}>Issues</Button></MenuItem>\n                        <MenuItem key={\"tm-3\"}><Button component={Link} to=\"/terms/\" color={\"primary\"}\n                                                       variant={\"contained\"}>Terms</Button></MenuItem>\n                        <MenuItem key={\"tm-4\"}><Button component={Link} to=\"/logout/\" color={\"primary\"}\n                                                       variant={\"contained\"}>Log out</Button></MenuItem>\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n            <Route path=\"/issues\" component={Issues}/>\n            <Route path=\"/terms\" component={Terms}/>\n            <Route path=\"/options\" component={Options}/>\n            <Route path=\"/logout\" component={IspPanel}/>\n        </Router>\n    ]);\n}","import React from \"react\";\nimport axios from \"axios\";\nimport IspCpConfig from \"../IspCpConfig\";\nimport User from \"../models/User\";\nimport LoginForm from \"./LoginForm\";\nimport DefaultPanel from \"./DefaultPanel\";\nimport {AppBar} from \"@material-ui/core\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {makeStyles} from \"@material-ui/core\";\n\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\n\nexport default class IspPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const user = new User();\n        this.state = {\n            user: user\n        }\n        this.handleSubmitLoginForm = this.handleSubmitLoginForm.bind(this);\n    }\n\n    handleSubmitLoginForm(event) {\n        event.preventDefault();\n        const form = event.currentTarget;\n        const user = User;\n        user.email = form.email.value;\n        user.pass = form.pass.value;\n\n\n        axios.get(IspCpConfig.ApiRequest(\"/users/login\"), {\n            params: {email: user.email, password: user.pass}\n        }).then(response => {\n            user.id = response.data.item.id || undefined;\n            this.setState({\n                user: user\n            });\n        }).catch((exception) => {\n            console.log(exception);\n        });\n    }\n\n    render() {\n        if (window.location.pathname === '/logout/') {\n            sessionStorage.clear();\n            window.location.href = window.location.origin;\n        }\n        const email = sessionStorage.getItem(\"email\") || this.state.user.email;\n        const pass = sessionStorage.getItem(\"password\") || this.state.user.pass;\n        const id = this.state.user.id || sessionStorage.getItem(\"id\");\n        if (parseInt(id) > 0) {\n            axios.defaults.params = {\n                email: email,\n                password: pass\n            };\n            sessionStorage.setItem(\"id\",id);\n            sessionStorage.setItem(\"email\",email);\n            sessionStorage.setItem(\"password\",pass);\n            const username = email.split(\"@\")[0].toUpperCase();\n\n            return ([<DefaultPanel username={username}/>]);\n        }\n        return ([<IspPanelAppBar/>, <LoginForm onSubmit={this.handleSubmitLoginForm} email={email} pass={pass}/>]);\n    }\n\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\n\nfunction IspPanelAppBar(props) {\n    const classes = useStyles();\n    const username = props.username || '';\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon/>\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                    {username}@ISP.CP\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport IspPanel from \"./componets/IspPanel\";\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    overrides: {\n        // Style sheet name ⚛️\n        MuiButton: {\n            // Name of the rule\n            root: {\n                // Some CSS\n                cursor: \"pointer\"\n            },\n        },\n    },\n});\n\nReactDOM.render(<IspPanel theme={theme}></IspPanel>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}